
type buffer;

neko("

	@buffer_alloc = $loader.loadprim('std2@buffer_alloc',0);
	@buffer_add = $loader.loadprim('std2@buffer_add',2);
	@buffer_add_sub = $loader.loadprim('std2@buffer_add_sub',4);
	@buffer_add_char = $loader.loadprim('std2@buffer_add_char',2);
	@buffer_string = $loader.loadprim('std2@buffer_string',1);
	@buffer_reset = $loader.loadprim('std2@buffer_reset',1);

");

function create() : buffer {
	neko("@buffer_alloc()");
}

function add(b:buffer,x : 'a) : void {
	neko("@buffer_add(b,x)");
}

function reset(b:buffer) : void {
	neko("@buffer_reset(b)");
}


var string : buffer -> string = neko("@buffer_string");
var add_sub : buffer -> string -> int -> int -> void = neko("@buffer_add_sub");
var add_char : buffer -> char -> void = neko("@buffer_add_char");
