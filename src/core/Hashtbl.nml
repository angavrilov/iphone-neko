/*
 *  NekoML Standard Library
 *  Copyright (c)2005 Nicolas Cannasse
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */


type ('a,'b) t;

function hash(x:'a) : int {
	neko("$hash(x)")
}

function create() {
	neko("$hnew(0)")
}

function length(h : ('a,'b) t) : int {
	neko("$hcount(h)")
}

function find(h : ('a,'b) t,k : 'a) : 'b {
	var v = neko("$hget(h,k,@Core.@compare)");
	if neko("v == null") then throw Not_found;
	v
}

function exists(h : ('a,'b) t,k : 'a) : bool {
	neko("$hmem(h,k,@Core.@compare)");
}

function add(h : ('a,'b) t, k : 'a, v : 'b) : void {
	neko("$hadd(h,k,v,@Core.@compare)");
}

function remove(h : ('a,'b) t,k : 'a) : void {
	neko("$hremove(h,k,@Core.@compare)");
}

function replace(h : ('a,'b) t,k : 'a,v : 'b) : void {
	neko("$hset(h,k,v,@Core.@compare)");
}

function iter(f : 'a -> 'b -> void,h : ('a,'b) t) : void {
	neko("$hiter(h,f)");
}
